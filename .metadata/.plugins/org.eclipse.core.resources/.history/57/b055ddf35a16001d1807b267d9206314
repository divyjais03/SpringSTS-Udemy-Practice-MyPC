In pom.xml --> Only Dependencies will be added


<--:--FLOW OF CODE--:-->
 pom.xml for dependency only.
 # code start from web.xml (configuration file)
 # from web.xml ---> redirected to SpringSample-servlet.xml (any name)
 # Now from here ---> to Controller class (in src/main/java) here @requestMapping ke through redirect hota he !
 #from controller class come to JSP File through request mapping.
 # Thi JSP pages interact with users.




1> First in web.xml: this web.xml cam be generated by right click on project go to Java EE Tools-> Generate deployment descriptor stub
	inside the <servlet> we put this--:
		<init-param>
     			 <param-name>contextConfigLocation</param-name>
    	  		 <param-value>/WEB-INF/SpringSample-servlet.xml</param-value>	 
    		</init-param>

   here the SpringSample-servlet.xml file needs to be created at the specified location --> WEB-INF inside.
   And rest all <servlet> and <servlet-mapping> is same as studied.

2> Now create SpringSample.xml file in WEB-INF folder.
  
   <beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="
   http://www.springframework.org/schema/beans     
   http://www.springframework.org/schema/beans/spring-beans.xsd
   http://www.springframework.org/schema/context 
   http://www.springframework.org/schema/context/spring-context.xsd">
   
   <!-- Adding Support for Component Scan -->
   <context:component-scan base-package="com.onmobile" />		<!-- Give this base package in src  -->
   
   <!-- Configure View Resolver -->					<!-- This will help to serch the JSP files by providing the path  --> 
   <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <property name="prefix" value="/WEB-INF/" />				<!-- Here is the path for JSP files -->
      <property name="suffix" value=".jsp" />
   </bean>
 
   </beans>


Copy this code in this xml file. Important things is adding support and configuring view resolver.

In Adding support:-- we give Package name of our controller class that is in src/main/java and ask for component scan.

In Configure view resolver:-- we give the path of our JSP files which is in WEB-INF.
	This configure view resolver helps to serch the JSP Files by providing the path name.


Now we have two tasks--: a) To create JSP file --> in web-inf
			 b) To create our main controller class --> in src/main/java


3> MainController class in src/main/java
  	
	@Controller
	   public class MainController {

		@RequestMapping(value="/", method=RequestMethod.GET)
		public String welcome() {
		
			return "Hello";				// this Hello is nothing but the JSP file in web-INF
		}
	
	}


4> JSP File with same name as mentioned in controller class:
 	This is our JSP file to interact with user...