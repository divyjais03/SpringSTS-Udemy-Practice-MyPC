In pom.xml --> Only Dependencies will be added


<--:--FLOW OF CODE--:-->
 pom.xml for dependency only.
 # code start from web.xml (configuration file)
 # from web.xml ---> redirected to SpringSample-servlet.xml (any name)
 # Now from here ---> to Controller class (in src/main/java) here @requestMapping ke through redirect hota he !
 #from controller class come to JSP File through request mapping.
 # Thi JSP pages interact with users.




1> First in web.xml: this web.xml cam be generated by right click on project go to Java EE Tools-> Generate deployment descriptor stub
	inside the <servlet> we put this--:
		<init-param>
     			 <param-name>contextConfigLocation</param-name>
    	  		 <param-value>/WEB-INF/SpringSample-servlet.xml</param-value>	 
    		</init-param>

   here the SpringSample-servlet.xml file needs to be created at the specified location --> WEB-INF inside.
   And rest all <servlet> and <servlet-mapping> is same as studied.

2> Now create SpringSample.xml file in WEB-INF folder.
  
   <beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="
   http://www.springframework.org/schema/beans     
   http://www.springframework.org/schema/beans/spring-beans.xsd
   http://www.springframework.org/schema/context 
   http://www.springframework.org/schema/context/spring-context.xsd">
   
   <!-- Adding Support for Component Scan -->
   <context:component-scan base-package="com.onmobile" />		<!-- Give this base package in src  -->
   
   <!-- Configure View Resolver -->					<!-- This will help to serch the JSP files by providing the path  --> 
   <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <property name="prefix" value="/WEB-INF/" />				<!-- Here is the path for JSP files -->
      <property name="suffix" value=".jsp" />
   </bean>
 
   </beans>


Copy this code in this xml file. Important things is adding support and configuring view resolver.

In Adding support:-- we give Package name of our controller class that is in src/main/java and ask for component scan.

In Configure view resolver:-- we give the path of our JSP files which is in WEB-INF.
	This configure view resolver helps to search the JSP Files by providing the path name.


Now we have two tasks--: a) To create JSP file --> in web-inf
			 b) To create our main controller class --> in src/main/java


3> MainController class in src/main/java
  	
	@Controller
	   public class MainController {

		@RequestMapping(value="/", method=RequestMethod.GET)
		public String welcome() {
		
			return "Hello";				// this Hello is nothing but the JSP file in web-INF
		}
	
	}


4> JSP File with same name as mentioned in controller class:
 	This is our JSP file to interact with user...
 	
 	# If facing any error--: Goto buid path---> Project Facets---> java----> make it 1.8, will work now!
 	
 	# If showing any tomcat can't start error on copying the project then--->right click--->Properties--->web project settings---> Change name @
 	
 	
 	
 5> Move the view file(JSP) to vier folder for ease. Change the path in SpringSample-servlet.xml file!
 
   In controller class make another @Requestmapping for a function display which is taking param as HttpServletRequest obj
   using the obj.getParameter("") take the name and store it in variable string.
   Now set the variable value into anther name.
 
    after that make another JSP file DisplayName.jsp in which show the name entered in for <%= %> using this tag and request.getAttribute("name")
 
 
 6> Now in displayName.jsp file instead of passing HttpServletRequest as a parameter 
 we use (@RequestParam("firstName1") String FirstName, Model model) : [firstName1 is from hello.jsp form tag]
      			In FirstName we are storing the value from hello.jsp
      			Instead of getParameter we use RequestParam
      			And we make the model and its object to addAttribute in displayname.jsp instead of setAttribute.
      			
      			in displayAttribute we don't use <%%> instead {name}  --> and done
 
 